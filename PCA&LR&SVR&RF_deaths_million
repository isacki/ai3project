{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of PCA&LR_deaths/million","provenance":[{"file_id":"https://github.com/isacki/ai3project/blob/master/PCA%26LR_deaths_million.ipynb","timestamp":1597125322578}],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.5"}},"cells":[{"cell_type":"markdown","metadata":{"id":"8NczWmsfgR-t","colab_type":"text"},"source":["[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](http://colab.research.google.com/github/isacki/ai3project/blob/master/explore_nans.ipynb)"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"qxtyXL9YNEaJ","colab":{},"executionInfo":{"status":"ok","timestamp":1597134629148,"user_tz":-480,"elapsed":768,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}}},"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import matplotlib.dates as mdate\n","import pandas as pd\n","import ipywidgets as widgets\n","from ipywidgets import interact\n","import os"],"execution_count":3,"outputs":[]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"oPssuexJR8Jp"},"source":["Download fixed data from a shared folder so that we all use the same data."]},{"cell_type":"code","metadata":{"colab_type":"code","id":"pMigreO-NMlQ","colab":{"base_uri":"https://localhost:8080/","height":110},"executionInfo":{"status":"ok","timestamp":1597134631502,"user_tz":-480,"elapsed":1959,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"a2f9165c-2a60-476c-acdf-45afe569609a"},"source":["# Download data\n","import gdown\n","work_dir = os.path.abspath(\"/content\")\n","work_file = os.path.join(work_dir, \"owid-covid-data.csv\")\n","data_file_link = \"https://drive.google.com/uc?id=1zWIKCrWWeEGjEe5Q88i21Lu9Cet_TzdQ\"\n","gdown.download(data_file_link, work_file, quiet=False)"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Downloading...\n","From: https://drive.google.com/uc?id=1zWIKCrWWeEGjEe5Q88i21Lu9Cet_TzdQ\n","To: /content/owid-covid-data.csv\n","5.71MB [00:00, 150MB/s]\n"],"name":"stderr"},{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'/content/owid-covid-data.csv'"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"colab_type":"code","id":"vZ7mB4IRNEaO","colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"status":"ok","timestamp":1597134632512,"user_tz":-480,"elapsed":1063,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"be629924-9478-4956-e2fe-6ee6658bc6ec"},"source":["infname = \"owid-covid-data.csv\"\n","indata = pd.read_csv(infname)\n","type(indata)\n","indata.head()"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>iso_code</th>\n","      <th>continent</th>\n","      <th>location</th>\n","      <th>date</th>\n","      <th>total_cases</th>\n","      <th>new_cases</th>\n","      <th>total_deaths</th>\n","      <th>new_deaths</th>\n","      <th>total_cases_per_million</th>\n","      <th>new_cases_per_million</th>\n","      <th>total_deaths_per_million</th>\n","      <th>new_deaths_per_million</th>\n","      <th>total_tests</th>\n","      <th>new_tests</th>\n","      <th>total_tests_per_thousand</th>\n","      <th>new_tests_per_thousand</th>\n","      <th>new_tests_smoothed</th>\n","      <th>new_tests_smoothed_per_thousand</th>\n","      <th>tests_units</th>\n","      <th>stringency_index</th>\n","      <th>population</th>\n","      <th>population_density</th>\n","      <th>median_age</th>\n","      <th>aged_65_older</th>\n","      <th>aged_70_older</th>\n","      <th>gdp_per_capita</th>\n","      <th>extreme_poverty</th>\n","      <th>cardiovasc_death_rate</th>\n","      <th>diabetes_prevalence</th>\n","      <th>female_smokers</th>\n","      <th>male_smokers</th>\n","      <th>handwashing_facilities</th>\n","      <th>hospital_beds_per_thousand</th>\n","      <th>life_expectancy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>AFG</td>\n","      <td>Asia</td>\n","      <td>Afghanistan</td>\n","      <td>2019-12-31</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>38928341.0</td>\n","      <td>54.422</td>\n","      <td>18.6</td>\n","      <td>2.581</td>\n","      <td>1.337</td>\n","      <td>1803.987</td>\n","      <td>NaN</td>\n","      <td>597.029</td>\n","      <td>9.59</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>37.746</td>\n","      <td>0.5</td>\n","      <td>64.83</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>AFG</td>\n","      <td>Asia</td>\n","      <td>Afghanistan</td>\n","      <td>2020-01-01</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>38928341.0</td>\n","      <td>54.422</td>\n","      <td>18.6</td>\n","      <td>2.581</td>\n","      <td>1.337</td>\n","      <td>1803.987</td>\n","      <td>NaN</td>\n","      <td>597.029</td>\n","      <td>9.59</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>37.746</td>\n","      <td>0.5</td>\n","      <td>64.83</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>AFG</td>\n","      <td>Asia</td>\n","      <td>Afghanistan</td>\n","      <td>2020-01-02</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>38928341.0</td>\n","      <td>54.422</td>\n","      <td>18.6</td>\n","      <td>2.581</td>\n","      <td>1.337</td>\n","      <td>1803.987</td>\n","      <td>NaN</td>\n","      <td>597.029</td>\n","      <td>9.59</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>37.746</td>\n","      <td>0.5</td>\n","      <td>64.83</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>AFG</td>\n","      <td>Asia</td>\n","      <td>Afghanistan</td>\n","      <td>2020-01-03</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>38928341.0</td>\n","      <td>54.422</td>\n","      <td>18.6</td>\n","      <td>2.581</td>\n","      <td>1.337</td>\n","      <td>1803.987</td>\n","      <td>NaN</td>\n","      <td>597.029</td>\n","      <td>9.59</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>37.746</td>\n","      <td>0.5</td>\n","      <td>64.83</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>AFG</td>\n","      <td>Asia</td>\n","      <td>Afghanistan</td>\n","      <td>2020-01-04</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>38928341.0</td>\n","      <td>54.422</td>\n","      <td>18.6</td>\n","      <td>2.581</td>\n","      <td>1.337</td>\n","      <td>1803.987</td>\n","      <td>NaN</td>\n","      <td>597.029</td>\n","      <td>9.59</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>37.746</td>\n","      <td>0.5</td>\n","      <td>64.83</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  iso_code continent  ... hospital_beds_per_thousand life_expectancy\n","0      AFG      Asia  ...                        0.5           64.83\n","1      AFG      Asia  ...                        0.5           64.83\n","2      AFG      Asia  ...                        0.5           64.83\n","3      AFG      Asia  ...                        0.5           64.83\n","4      AFG      Asia  ...                        0.5           64.83\n","\n","[5 rows x 34 columns]"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"mzcFOJ_TNEaQ"},"source":["Basic information about the dataset:"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"W7A8t3gJNEaR","colab":{"base_uri":"https://localhost:8080/","height":276},"executionInfo":{"status":"ok","timestamp":1597134633538,"user_tz":-480,"elapsed":742,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"fafaf66b-3198-4ada-92e9-f9fb16d1cd08"},"source":["print(\"Shape of original data: \" + str(indata.shape))\n","print(\"Columns of original data: \")\n","print(indata.columns)"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Shape of original data: (31705, 34)\n","Columns of original data: \n","Index(['iso_code', 'continent', 'location', 'date', 'total_cases', 'new_cases',\n","       'total_deaths', 'new_deaths', 'total_cases_per_million',\n","       'new_cases_per_million', 'total_deaths_per_million',\n","       'new_deaths_per_million', 'total_tests', 'new_tests',\n","       'total_tests_per_thousand', 'new_tests_per_thousand',\n","       'new_tests_smoothed', 'new_tests_smoothed_per_thousand', 'tests_units',\n","       'stringency_index', 'population', 'population_density', 'median_age',\n","       'aged_65_older', 'aged_70_older', 'gdp_per_capita', 'extreme_poverty',\n","       'cardiovasc_death_rate', 'diabetes_prevalence', 'female_smokers',\n","       'male_smokers', 'handwashing_facilities', 'hospital_beds_per_thousand',\n","       'life_expectancy'],\n","      dtype='object')\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"7zcQDsOApfuP","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":245},"executionInfo":{"status":"ok","timestamp":1597134635075,"user_tz":-480,"elapsed":925,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"7f815179-4899-4302-d32e-1fcdac7fe752"},"source":["#20-7-2020 data\n","df=indata\n","df[\"date\"] = pd.to_datetime(df[\"date\"], format=\"%Y-%m-%d\")\n","#print(df[\"date\"])\n","df = df.loc[df['date'] == '2020-07-10']\n","print(\"Shape of data for 2020-07-10: \" + str(df.shape))\n","df.head()"],"execution_count":7,"outputs":[{"output_type":"stream","text":["Shape of data for 2020-07-10: (211, 34)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>iso_code</th>\n","      <th>continent</th>\n","      <th>location</th>\n","      <th>date</th>\n","      <th>total_cases</th>\n","      <th>new_cases</th>\n","      <th>total_deaths</th>\n","      <th>new_deaths</th>\n","      <th>total_cases_per_million</th>\n","      <th>new_cases_per_million</th>\n","      <th>total_deaths_per_million</th>\n","      <th>new_deaths_per_million</th>\n","      <th>total_tests</th>\n","      <th>new_tests</th>\n","      <th>total_tests_per_thousand</th>\n","      <th>new_tests_per_thousand</th>\n","      <th>new_tests_smoothed</th>\n","      <th>new_tests_smoothed_per_thousand</th>\n","      <th>tests_units</th>\n","      <th>stringency_index</th>\n","      <th>population</th>\n","      <th>population_density</th>\n","      <th>median_age</th>\n","      <th>aged_65_older</th>\n","      <th>aged_70_older</th>\n","      <th>gdp_per_capita</th>\n","      <th>extreme_poverty</th>\n","      <th>cardiovasc_death_rate</th>\n","      <th>diabetes_prevalence</th>\n","      <th>female_smokers</th>\n","      <th>male_smokers</th>\n","      <th>handwashing_facilities</th>\n","      <th>hospital_beds_per_thousand</th>\n","      <th>life_expectancy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>182</th>\n","      <td>AFG</td>\n","      <td>Asia</td>\n","      <td>Afghanistan</td>\n","      <td>2020-07-10</td>\n","      <td>33908.0</td>\n","      <td>255.0</td>\n","      <td>957.0</td>\n","      <td>20.0</td>\n","      <td>871.036</td>\n","      <td>6.550</td>\n","      <td>24.584</td>\n","      <td>0.514</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>38928341.0</td>\n","      <td>54.422</td>\n","      <td>18.6</td>\n","      <td>2.581</td>\n","      <td>1.337</td>\n","      <td>1803.987</td>\n","      <td>NaN</td>\n","      <td>597.029</td>\n","      <td>9.59</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>37.746</td>\n","      <td>0.50</td>\n","      <td>64.83</td>\n","    </tr>\n","    <tr>\n","      <th>317</th>\n","      <td>ALB</td>\n","      <td>Europe</td>\n","      <td>Albania</td>\n","      <td>2020-07-10</td>\n","      <td>3188.0</td>\n","      <td>82.0</td>\n","      <td>83.0</td>\n","      <td>0.0</td>\n","      <td>1107.791</td>\n","      <td>28.494</td>\n","      <td>28.841</td>\n","      <td>0.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>59.26</td>\n","      <td>2877800.0</td>\n","      <td>104.871</td>\n","      <td>38.0</td>\n","      <td>13.188</td>\n","      <td>8.643</td>\n","      <td>11803.431</td>\n","      <td>1.1</td>\n","      <td>304.195</td>\n","      <td>10.08</td>\n","      <td>7.1</td>\n","      <td>51.2</td>\n","      <td>NaN</td>\n","      <td>2.89</td>\n","      <td>78.57</td>\n","    </tr>\n","    <tr>\n","      <th>516</th>\n","      <td>DZA</td>\n","      <td>Africa</td>\n","      <td>Algeria</td>\n","      <td>2020-07-10</td>\n","      <td>17808.0</td>\n","      <td>460.0</td>\n","      <td>988.0</td>\n","      <td>10.0</td>\n","      <td>406.102</td>\n","      <td>10.490</td>\n","      <td>22.531</td>\n","      <td>0.228</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>74.07</td>\n","      <td>43851043.0</td>\n","      <td>17.348</td>\n","      <td>29.1</td>\n","      <td>6.211</td>\n","      <td>3.857</td>\n","      <td>13913.839</td>\n","      <td>0.5</td>\n","      <td>278.364</td>\n","      <td>6.73</td>\n","      <td>0.7</td>\n","      <td>30.4</td>\n","      <td>83.741</td>\n","      <td>1.90</td>\n","      <td>76.88</td>\n","    </tr>\n","    <tr>\n","      <th>646</th>\n","      <td>AND</td>\n","      <td>Europe</td>\n","      <td>Andorra</td>\n","      <td>2020-07-10</td>\n","      <td>855.0</td>\n","      <td>0.0</td>\n","      <td>52.0</td>\n","      <td>0.0</td>\n","      <td>11065.812</td>\n","      <td>0.000</td>\n","      <td>673.008</td>\n","      <td>0.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>41.67</td>\n","      <td>77265.0</td>\n","      <td>163.755</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>109.135</td>\n","      <td>7.97</td>\n","      <td>29.0</td>\n","      <td>37.8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>83.73</td>\n","    </tr>\n","    <tr>\n","      <th>768</th>\n","      <td>AGO</td>\n","      <td>Africa</td>\n","      <td>Angola</td>\n","      <td>2020-07-10</td>\n","      <td>396.0</td>\n","      <td>10.0</td>\n","      <td>22.0</td>\n","      <td>1.0</td>\n","      <td>12.049</td>\n","      <td>0.304</td>\n","      <td>0.669</td>\n","      <td>0.030</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>76.39</td>\n","      <td>32866268.0</td>\n","      <td>23.890</td>\n","      <td>16.8</td>\n","      <td>2.405</td>\n","      <td>1.362</td>\n","      <td>5819.495</td>\n","      <td>NaN</td>\n","      <td>276.045</td>\n","      <td>3.94</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>26.664</td>\n","      <td>NaN</td>\n","      <td>61.15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    iso_code continent  ... hospital_beds_per_thousand life_expectancy\n","182      AFG      Asia  ...                       0.50           64.83\n","317      ALB    Europe  ...                       2.89           78.57\n","516      DZA    Africa  ...                       1.90           76.88\n","646      AND    Europe  ...                        NaN           83.73\n","768      AGO    Africa  ...                        NaN           61.15\n","\n","[5 rows x 34 columns]"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"liTabtcd-vQM","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":664},"executionInfo":{"status":"ok","timestamp":1597134636020,"user_tz":-480,"elapsed":506,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"2e381d12-62b6-48ad-fca8-237b7de92a62"},"source":["df.isnull().sum()"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["iso_code                             0\n","continent                            1\n","location                             0\n","date                                 0\n","total_cases                          1\n","new_cases                            1\n","total_deaths                         1\n","new_deaths                           1\n","total_cases_per_million              1\n","new_cases_per_million                1\n","total_deaths_per_million             1\n","new_deaths_per_million               1\n","total_tests                        137\n","new_tests                          135\n","total_tests_per_thousand           137\n","new_tests_per_thousand             135\n","new_tests_smoothed                 124\n","new_tests_smoothed_per_thousand    124\n","tests_units                        124\n","stringency_index                    50\n","population                           0\n","population_density                  11\n","median_age                          24\n","aged_65_older                       27\n","aged_70_older                       25\n","gdp_per_capita                      27\n","extreme_poverty                     89\n","cardiovasc_death_rate               25\n","diabetes_prevalence                 17\n","female_smokers                      70\n","male_smokers                        72\n","handwashing_facilities             119\n","hospital_beds_per_thousand          46\n","life_expectancy                      3\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"iPkW8BlNPC4U","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":479},"executionInfo":{"status":"ok","timestamp":1597128000776,"user_tz":-480,"elapsed":1068,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"1d79b50d-10d3-4f2c-b760-03d16c1b1531"},"source":["#remove nans\n","df[\"location\"].drop_duplicates()\n","workdata=df.drop(columns=['continent','date','iso_code','total_tests', 'new_tests','total_tests_per_thousand','new_deaths','new_cases','new_deaths_per_million','new_tests_per_thousand','new_tests_smoothed','new_tests_smoothed_per_thousand','tests_units','extreme_poverty','handwashing_facilities','stringency_index','female_smokers','male_smokers','hospital_beds_per_thousand','diabetes_prevalence'])\n","workdata = workdata[workdata.location != 'World']\n","workdata.dropna()"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>location</th>\n","      <th>total_cases</th>\n","      <th>total_deaths</th>\n","      <th>total_cases_per_million</th>\n","      <th>new_cases_per_million</th>\n","      <th>total_deaths_per_million</th>\n","      <th>population</th>\n","      <th>population_density</th>\n","      <th>median_age</th>\n","      <th>aged_65_older</th>\n","      <th>aged_70_older</th>\n","      <th>gdp_per_capita</th>\n","      <th>cardiovasc_death_rate</th>\n","      <th>life_expectancy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>182</th>\n","      <td>Afghanistan</td>\n","      <td>33908.0</td>\n","      <td>957.0</td>\n","      <td>871.036</td>\n","      <td>6.550</td>\n","      <td>24.584</td>\n","      <td>38928341.0</td>\n","      <td>54.422</td>\n","      <td>18.6</td>\n","      <td>2.581</td>\n","      <td>1.337</td>\n","      <td>1803.987</td>\n","      <td>597.029</td>\n","      <td>64.83</td>\n","    </tr>\n","    <tr>\n","      <th>317</th>\n","      <td>Albania</td>\n","      <td>3188.0</td>\n","      <td>83.0</td>\n","      <td>1107.791</td>\n","      <td>28.494</td>\n","      <td>28.841</td>\n","      <td>2877800.0</td>\n","      <td>104.871</td>\n","      <td>38.0</td>\n","      <td>13.188</td>\n","      <td>8.643</td>\n","      <td>11803.431</td>\n","      <td>304.195</td>\n","      <td>78.57</td>\n","    </tr>\n","    <tr>\n","      <th>516</th>\n","      <td>Algeria</td>\n","      <td>17808.0</td>\n","      <td>988.0</td>\n","      <td>406.102</td>\n","      <td>10.490</td>\n","      <td>22.531</td>\n","      <td>43851043.0</td>\n","      <td>17.348</td>\n","      <td>29.1</td>\n","      <td>6.211</td>\n","      <td>3.857</td>\n","      <td>13913.839</td>\n","      <td>278.364</td>\n","      <td>76.88</td>\n","    </tr>\n","    <tr>\n","      <th>768</th>\n","      <td>Angola</td>\n","      <td>396.0</td>\n","      <td>22.0</td>\n","      <td>12.049</td>\n","      <td>0.304</td>\n","      <td>0.669</td>\n","      <td>32866268.0</td>\n","      <td>23.890</td>\n","      <td>16.8</td>\n","      <td>2.405</td>\n","      <td>1.362</td>\n","      <td>5819.495</td>\n","      <td>276.045</td>\n","      <td>61.15</td>\n","    </tr>\n","    <tr>\n","      <th>1009</th>\n","      <td>Antigua and Barbuda</td>\n","      <td>73.0</td>\n","      <td>3.0</td>\n","      <td>745.446</td>\n","      <td>0.000</td>\n","      <td>30.635</td>\n","      <td>97928.0</td>\n","      <td>231.845</td>\n","      <td>32.1</td>\n","      <td>6.933</td>\n","      <td>4.631</td>\n","      <td>21490.943</td>\n","      <td>191.511</td>\n","      <td>77.02</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>30783</th>\n","      <td>Venezuela</td>\n","      <td>8372.0</td>\n","      <td>80.0</td>\n","      <td>294.416</td>\n","      <td>12.730</td>\n","      <td>2.813</td>\n","      <td>28435943.0</td>\n","      <td>36.253</td>\n","      <td>29.0</td>\n","      <td>6.614</td>\n","      <td>3.915</td>\n","      <td>16745.022</td>\n","      <td>204.850</td>\n","      <td>72.06</td>\n","    </tr>\n","    <tr>\n","      <th>30987</th>\n","      <td>Vietnam</td>\n","      <td>369.0</td>\n","      <td>0.0</td>\n","      <td>3.791</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>97338583.0</td>\n","      <td>308.127</td>\n","      <td>32.6</td>\n","      <td>7.150</td>\n","      <td>4.718</td>\n","      <td>6171.884</td>\n","      <td>245.465</td>\n","      <td>75.40</td>\n","    </tr>\n","    <tr>\n","      <th>31177</th>\n","      <td>Yemen</td>\n","      <td>1356.0</td>\n","      <td>361.0</td>\n","      <td>45.464</td>\n","      <td>1.274</td>\n","      <td>12.104</td>\n","      <td>29825968.0</td>\n","      <td>53.508</td>\n","      <td>20.3</td>\n","      <td>2.922</td>\n","      <td>1.583</td>\n","      <td>1479.147</td>\n","      <td>495.003</td>\n","      <td>66.12</td>\n","    </tr>\n","    <tr>\n","      <th>31302</th>\n","      <td>Zambia</td>\n","      <td>1895.0</td>\n","      <td>42.0</td>\n","      <td>103.079</td>\n","      <td>0.000</td>\n","      <td>2.285</td>\n","      <td>18383956.0</td>\n","      <td>22.995</td>\n","      <td>17.7</td>\n","      <td>2.480</td>\n","      <td>1.542</td>\n","      <td>3689.251</td>\n","      <td>234.499</td>\n","      <td>63.89</td>\n","    </tr>\n","    <tr>\n","      <th>31425</th>\n","      <td>Zimbabwe</td>\n","      <td>926.0</td>\n","      <td>12.0</td>\n","      <td>62.303</td>\n","      <td>2.759</td>\n","      <td>0.807</td>\n","      <td>14862927.0</td>\n","      <td>42.729</td>\n","      <td>19.6</td>\n","      <td>2.822</td>\n","      <td>1.882</td>\n","      <td>1899.775</td>\n","      <td>307.846</td>\n","      <td>61.49</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>172 rows × 14 columns</p>\n","</div>"],"text/plain":["                  location  total_cases  ...  cardiovasc_death_rate  life_expectancy\n","182            Afghanistan      33908.0  ...                597.029            64.83\n","317                Albania       3188.0  ...                304.195            78.57\n","516                Algeria      17808.0  ...                278.364            76.88\n","768                 Angola        396.0  ...                276.045            61.15\n","1009   Antigua and Barbuda         73.0  ...                191.511            77.02\n","...                    ...          ...  ...                    ...              ...\n","30783            Venezuela       8372.0  ...                204.850            72.06\n","30987              Vietnam        369.0  ...                245.465            75.40\n","31177                Yemen       1356.0  ...                495.003            66.12\n","31302               Zambia       1895.0  ...                234.499            63.89\n","31425             Zimbabwe        926.0  ...                307.846            61.49\n","\n","[172 rows x 14 columns]"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"id":"N3-OvcPaw1Dk","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":280},"executionInfo":{"status":"ok","timestamp":1597134640267,"user_tz":-480,"elapsed":785,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"8146676c-38ad-4af3-c357-950f19652398"},"source":["#remove nans\n","#percent nulls\n","df[\"location\"].drop_duplicates()\n","workdata=df.drop(columns=['continent','date','iso_code','total_tests', 'new_tests','total_tests_per_thousand','new_deaths','new_cases','new_deaths_per_million','new_tests_per_thousand','new_tests_smoothed','new_tests_smoothed_per_thousand','tests_units','extreme_poverty','handwashing_facilities','stringency_index','female_smokers','male_smokers','hospital_beds_per_thousand','diabetes_prevalence'])\n","workdata = workdata[workdata.location != 'World']\n","#(100*workdata.isnull().sum())/len(workdata)\n","workdata\n","##remove all null rows? - only 17 remaining\n","newdata=workdata[workdata.isnull().sum(axis=1) == 0]\n","print(\"Shape of newdata: \" + str(newdata.shape))\n","newdata.head()"],"execution_count":9,"outputs":[{"output_type":"stream","text":["Shape of newdata: (172, 14)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>location</th>\n","      <th>total_cases</th>\n","      <th>total_deaths</th>\n","      <th>total_cases_per_million</th>\n","      <th>new_cases_per_million</th>\n","      <th>total_deaths_per_million</th>\n","      <th>population</th>\n","      <th>population_density</th>\n","      <th>median_age</th>\n","      <th>aged_65_older</th>\n","      <th>aged_70_older</th>\n","      <th>gdp_per_capita</th>\n","      <th>cardiovasc_death_rate</th>\n","      <th>life_expectancy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>182</th>\n","      <td>Afghanistan</td>\n","      <td>33908.0</td>\n","      <td>957.0</td>\n","      <td>871.036</td>\n","      <td>6.550</td>\n","      <td>24.584</td>\n","      <td>38928341.0</td>\n","      <td>54.422</td>\n","      <td>18.6</td>\n","      <td>2.581</td>\n","      <td>1.337</td>\n","      <td>1803.987</td>\n","      <td>597.029</td>\n","      <td>64.83</td>\n","    </tr>\n","    <tr>\n","      <th>317</th>\n","      <td>Albania</td>\n","      <td>3188.0</td>\n","      <td>83.0</td>\n","      <td>1107.791</td>\n","      <td>28.494</td>\n","      <td>28.841</td>\n","      <td>2877800.0</td>\n","      <td>104.871</td>\n","      <td>38.0</td>\n","      <td>13.188</td>\n","      <td>8.643</td>\n","      <td>11803.431</td>\n","      <td>304.195</td>\n","      <td>78.57</td>\n","    </tr>\n","    <tr>\n","      <th>516</th>\n","      <td>Algeria</td>\n","      <td>17808.0</td>\n","      <td>988.0</td>\n","      <td>406.102</td>\n","      <td>10.490</td>\n","      <td>22.531</td>\n","      <td>43851043.0</td>\n","      <td>17.348</td>\n","      <td>29.1</td>\n","      <td>6.211</td>\n","      <td>3.857</td>\n","      <td>13913.839</td>\n","      <td>278.364</td>\n","      <td>76.88</td>\n","    </tr>\n","    <tr>\n","      <th>768</th>\n","      <td>Angola</td>\n","      <td>396.0</td>\n","      <td>22.0</td>\n","      <td>12.049</td>\n","      <td>0.304</td>\n","      <td>0.669</td>\n","      <td>32866268.0</td>\n","      <td>23.890</td>\n","      <td>16.8</td>\n","      <td>2.405</td>\n","      <td>1.362</td>\n","      <td>5819.495</td>\n","      <td>276.045</td>\n","      <td>61.15</td>\n","    </tr>\n","    <tr>\n","      <th>1009</th>\n","      <td>Antigua and Barbuda</td>\n","      <td>73.0</td>\n","      <td>3.0</td>\n","      <td>745.446</td>\n","      <td>0.000</td>\n","      <td>30.635</td>\n","      <td>97928.0</td>\n","      <td>231.845</td>\n","      <td>32.1</td>\n","      <td>6.933</td>\n","      <td>4.631</td>\n","      <td>21490.943</td>\n","      <td>191.511</td>\n","      <td>77.02</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                 location  total_cases  ...  cardiovasc_death_rate  life_expectancy\n","182           Afghanistan      33908.0  ...                597.029            64.83\n","317               Albania       3188.0  ...                304.195            78.57\n","516               Algeria      17808.0  ...                278.364            76.88\n","768                Angola        396.0  ...                276.045            61.15\n","1009  Antigua and Barbuda         73.0  ...                191.511            77.02\n","\n","[5 rows x 14 columns]"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"7mLrNR8-3Zdi","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1597134641413,"user_tz":-480,"elapsed":499,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}}},"source":["from sklearn.model_selection import train_test_split\n","#newdata.columns\n","#'location', 'total_cases', 'new_cases', 'total_deaths', 'total_cases_per_million', 'new_cases_per_million','total_deaths_per_million', 'new_deaths_per_million', 'population','population_density', 'median_age', 'aged_65_older', 'aged_70_older',\n","       #'gdp_per_capita', 'cardiovasc_death_rate', 'life_expectancy']\n","\n","#targets - total_deaths\n","vars=newdata.drop(columns=['total_deaths','total_deaths_per_million','location'])\n","targs=newdata[['total_deaths','total_deaths_per_million']]\n","trainx, testx, trainy, testy = train_test_split(vars, targs, test_size=0.2, random_state=0)"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"RvDUoZCPnogo","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":353},"executionInfo":{"status":"ok","timestamp":1597134643309,"user_tz":-480,"elapsed":815,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"e5e00a2f-11e3-4812-de84-aa962c93865f"},"source":["from sklearn.preprocessing import StandardScaler\n","from sklearn.decomposition import PCA\n","from sklearn import preprocessing\n","import matplotlib.pyplot as plt\n","scaler = StandardScaler() \n","trainx_scale = scaler.fit_transform(trainx)\n","testx_scale = scaler.fit_transform(testx)\n","\n","pca = PCA(.95)\n","pca.fit(trainx_scale)\n","\n","print(pca.explained_variance_ratio_)\n","#plt.bar(np.arange(11), pca.explained_variance_ratio_[0:55])\n","\n","print(np.cumsum(pca.explained_variance_ratio_))\n","plt.plot(np.cumsum(pca.explained_variance_ratio_))\n","plt.xlabel('number of components')\n","plt.ylabel('cumulative explained variance');"],"execution_count":11,"outputs":[{"output_type":"stream","text":["[0.39394641 0.19073313 0.12030418 0.09179114 0.07059747 0.05309966\n"," 0.0398414 ]\n","[0.39394641 0.58467953 0.70498371 0.79677485 0.86737232 0.92047198\n"," 0.96031338]\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"6R06gkPaol_C","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1597134644847,"user_tz":-480,"elapsed":732,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}}},"source":["train_fit = pca.transform(trainx_scale)\n","test_fit = pca.transform(testx_scale)"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"srYJNkdQtx6s","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1597134646539,"user_tz":-480,"elapsed":767,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"798c2147-c9d9-4ff3-f9a4-06fda980a0a5"},"source":["from sklearn.linear_model import LinearRegression\n","from sklearn import metrics\n","\n","regressor = LinearRegression() \n","regressor.fit(train_fit, trainy['total_deaths_per_million'])"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False)"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"DEO3lKfPt-ND","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1597134647703,"user_tz":-480,"elapsed":974,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"c74dbadc-9271-4641-c428-7511283f3489"},"source":["yhat=regressor.predict(test_fit)\n","regressor.score(test_fit, testy['total_deaths_per_million'])\n","#logisticRegr.score(testy['total_deaths'],yhat)\n","  \n","#log_loss(testy['total_deaths'],yhat)"],"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.47524078100362305"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"id":"1KJSB7Y_ucuF","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":72},"executionInfo":{"status":"ok","timestamp":1597134648721,"user_tz":-480,"elapsed":1064,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"3b8f2234-78bc-4182-b636-94aa40971bda"},"source":["print('Mean Absolute Error:', metrics.mean_absolute_error(testy['total_deaths_per_million'], yhat))  \n","print('Mean Squared Error:', metrics.mean_squared_error(testy['total_deaths_per_million'], yhat))  \n","print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(testy['total_deaths_per_million'], yhat)))"],"execution_count":15,"outputs":[{"output_type":"stream","text":["Mean Absolute Error: 67.38036640004478\n","Mean Squared Error: 10294.11496668269\n","Root Mean Squared Error: 101.45991803013982\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"1ywWBJoiT2Ot","colab_type":"text"},"source":["Support Vector Regression."]},{"cell_type":"code","metadata":{"id":"PBYfUPq_Nr5p","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":128},"executionInfo":{"status":"ok","timestamp":1597136185026,"user_tz":-480,"elapsed":729,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"1e164c3c-1b5b-4206-bb18-085bf1392928"},"source":["# Fit SVR onto PC transformed data\n","from sklearn.svm import SVR\n","from sklearn.model_selection import cross_val_score\n","from sklearn.model_selection import GridSearchCV\n","svr = SVR(kernel='linear', C = 1)\n","svr.fit(train_fit, trainy['total_deaths_per_million'])\n","# Training Performance\n","np.set_printoptions(formatter={'float': lambda x: \"{0:0.2f}\".format(x)})\n","cv_score = cross_val_score(svr, train_fit, trainy['total_deaths_per_million'], cv=10, scoring='neg_mean_squared_error')\n","train_score = svr.score(train_fit, trainy['total_deaths_per_million'])\n","print (\"Ten-fold Cross Validation neg_mean_squared_error =\", \"%.4f\" % np.mean(cv_score))\n","print (\"Training performance:\", \"%.4f\" % train_score)\n","# Testing Performance\n","yhat=svr.predict(test_fit)\n","test_score = svr.score(test_fit, testy['total_deaths_per_million'])\n","print (\"Testing Performance:\", \"%.4f\" % test_score)\n","print('Mean Absolute Error:', metrics.mean_absolute_error(testy['total_deaths_per_million'], yhat))  \n","print('Mean Squared Error:', metrics.mean_squared_error(testy['total_deaths_per_million'], yhat))  \n","print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(testy['total_deaths_per_million'], yhat)))"],"execution_count":33,"outputs":[{"output_type":"stream","text":["Ten-fold Cross Validation neg_mean_squared_error = -14656.3545\n","Training performance: 0.1452\n","Testing Performance: 0.2142\n","Mean Absolute Error: 51.86982960479611\n","Mean Squared Error: 15414.27660344845\n","Root Mean Squared Error: 124.15424520912867\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"5msO_r3gNsAr","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":128},"executionInfo":{"status":"ok","timestamp":1597136136427,"user_tz":-480,"elapsed":762,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"ee1efa9f-ff82-4500-acd1-7c36b48465b8"},"source":["# Fit SVR onto original transformed data\n","svr = SVR(kernel='linear', C = 1)\n","svr.fit(trainx_scale, trainy['total_deaths_per_million'])\n","# Training Performance\n","np.set_printoptions(formatter={'float': lambda x: \"{0:0.2f}\".format(x)})\n","cv_score = cross_val_score(svr, trainx_scale, trainy['total_deaths_per_million'], cv=10, scoring='neg_mean_squared_error')\n","train_score = svr.score(trainx_scale, trainy['total_deaths_per_million'])\n","print (\"Ten-fold Cross Validation neg_mean_squared_error =\", \"%.4f\" % np.mean(cv_score))\n","print (\"Training performance:\", \"%.4f\" % train_score)\n","# Testing Performance\n","yhat=svr.predict(testx_scale)\n","test_score = svr.score(testx_scale, testy['total_deaths_per_million'])\n","print (\"Testing Performance:\", \"%.4f\" % test_score)\n","print('Mean Absolute Error:', metrics.mean_absolute_error(testy['total_deaths_per_million'], yhat))  \n","print('Mean Squared Error:', metrics.mean_squared_error(testy['total_deaths_per_million'], yhat))  \n","print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(testy['total_deaths_per_million'], yhat)))"],"execution_count":32,"outputs":[{"output_type":"stream","text":["Ten-fold Cross Validation neg_mean_squared_error = -14509.0688\n","Training performance: 0.1647\n","Testing Performance: 0.2430\n","Mean Absolute Error: 49.87461610621419\n","Mean Squared Error: 14850.767407051364\n","Root Mean Squared Error: 121.86372473813265\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"M5aas76oq69o","colab_type":"text"},"source":["DO NOT RUN THE FOLLOWING CELL... takes time..."]},{"cell_type":"code","metadata":{"id":"czllTLICa5Ns","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":313},"executionInfo":{"status":"ok","timestamp":1597135580468,"user_tz":-480,"elapsed":734244,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"3e553c34-ee06-408c-8622-67dcfac906c4"},"source":["parameters = {'kernel':('linear', 'rbf', 'poly'), 'C':[0.6,0.7,0.8, 0.9, 1,2,3,4,5,6,7,8,9,10], 'gamma': (1E0,1E1,1E2,1E3,1E4)}\n","svr = SVR()\n","rgr =  GridSearchCV(svr, parameters)\n","rgr.fit(trainx_scale, trainy['total_deaths_per_million'])\n","sorted(rgr.cv_results_.keys())"],"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['mean_fit_time',\n"," 'mean_score_time',\n"," 'mean_test_score',\n"," 'param_C',\n"," 'param_gamma',\n"," 'param_kernel',\n"," 'params',\n"," 'rank_test_score',\n"," 'split0_test_score',\n"," 'split1_test_score',\n"," 'split2_test_score',\n"," 'split3_test_score',\n"," 'split4_test_score',\n"," 'std_fit_time',\n"," 'std_score_time',\n"," 'std_test_score']"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"_0FgrUkphCKV","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":54},"executionInfo":{"status":"ok","timestamp":1597135735351,"user_tz":-480,"elapsed":787,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"bf0752b8-4c1f-457e-c85d-3e210420d5a3"},"source":["rgr.best_estimator_"],"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVR(C=4, cache_size=200, coef0=0.0, degree=3, epsilon=0.1, gamma=1.0,\n","    kernel='linear', max_iter=-1, shrinking=True, tol=0.001, verbose=False)"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"code","metadata":{"id":"XP1vLmKCifWg","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1597135740480,"user_tz":-480,"elapsed":801,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"84fe2426-8beb-4ab4-9f69-ee89f6c18442"},"source":["rgr.best_params_"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'C': 4, 'gamma': 1.0, 'kernel': 'linear'}"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"UhQk_AGUi0Fe","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":128},"executionInfo":{"status":"ok","timestamp":1597136115820,"user_tz":-480,"elapsed":762,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"f41cc107-440f-4cc1-8ca0-7c6a912590cb"},"source":["# Fit best params for SVR onto original transformed data\n","svr = SVR(kernel='linear', C = 4, gamma=1)\n","svr.fit(trainx_scale, trainy['total_deaths_per_million'])\n","# Training Performance\n","np.set_printoptions(formatter={'float': lambda x: \"{0:0.2f}\".format(x)})\n","cv_score = cross_val_score(svr, trainx_scale, trainy['total_deaths_per_million'], cv=10, scoring='neg_mean_squared_error')\n","train_score = svr.score(trainx_scale, trainy['total_deaths_per_million'])\n","print (\"Ten-fold Cross Validation neg_mean_squared_error =\", \"%.4f\" % np.mean(cv_score))\n","print (\"Training performance:\", \"%.4f\" % train_score)\n","# Testing Performance\n","yhat=svr.predict(testx_scale)\n","test_score = svr.score(testx_scale, testy['total_deaths_per_million'])\n","print (\"Testing Performance:\", \"%.4f\" % test_score)\n","print('Mean Absolute Error:', metrics.mean_absolute_error(testy['total_deaths_per_million'], yhat))  \n","print('Mean Squared Error:', metrics.mean_squared_error(testy['total_deaths_per_million'], yhat))  \n","print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(testy['total_deaths_per_million'], yhat)))"],"execution_count":31,"outputs":[{"output_type":"stream","text":["Ten-fold Cross Validation neg_mean_squared_error = -13630.5176\n","Training performance: 0.2159\n","Testing Performance: 0.3579\n","Mean Absolute Error: 48.16672791841826\n","Mean Squared Error: 12596.64959653098\n","Root Mean Squared Error: 112.23479672780176\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"jUcPDsHDfRtB","colab_type":"text"},"source":["Random Forest Regressor"]},{"cell_type":"code","metadata":{"id":"dC-jJ-UXZpmt","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":146},"executionInfo":{"status":"ok","timestamp":1597136215106,"user_tz":-480,"elapsed":2605,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"4aab5c21-c09c-4a80-f689-1fd7a5efa97b"},"source":["from sklearn.ensemble import RandomForestRegressor\n","rf = RandomForestRegressor (n_estimators=100, random_state=1, oob_score=True, max_depth=2 )\n","rf.fit(trainx, trainy['total_deaths_per_million'])\n","print (\"OOB_SCORE=\", \"%.4f\" % rf.oob_score_)\n","# Training performance\n","cv_score = cross_val_score(rf, trainx, trainy['total_deaths_per_million'], cv=10, scoring='neg_mean_squared_error')\n","train_score = rf.score(trainx, trainy['total_deaths_per_million'])\n","print (\"Ten-fold Cross Validation neg_mean_squared_error =\", \"%.4f\" % np.mean(cv_score))\n","print (\"Training performance:\", \"%.4f\" % train_score)\n","# Testing Performance\n","yhat=rf.predict(testx)\n","test_score = rf.score(testx, testy['total_deaths_per_million'])\n","print (\"Testing Performance:\", \"%.4f\" % test_score)\n","print('Mean Absolute Error:', metrics.mean_absolute_error(testy['total_deaths_per_million'], yhat))  \n","print('Mean Squared Error:', metrics.mean_squared_error(testy['total_deaths_per_million'], yhat))  \n","print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(testy['total_deaths_per_million'], yhat)))"],"execution_count":34,"outputs":[{"output_type":"stream","text":["OOB_SCORE= 0.4929\n","Ten-fold Cross Validation neg_mean_squared_error = -10908.5503\n","Training performance: 0.7765\n","Testing Performance: 0.7089\n","Mean Absolute Error: 41.01156009936335\n","Mean Squared Error: 5710.248501967999\n","Root Mean Squared Error: 75.5661862341087\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Axu6L3P7lqQT","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":904},"executionInfo":{"status":"ok","timestamp":1597133745813,"user_tz":-480,"elapsed":840,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"04938112-852b-4e51-c5ca-15d88de28e7a"},"source":["import sklearn\n","sorted(sklearn.metrics.SCORERS.keys())"],"execution_count":69,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['accuracy',\n"," 'adjusted_mutual_info_score',\n"," 'adjusted_rand_score',\n"," 'average_precision',\n"," 'balanced_accuracy',\n"," 'completeness_score',\n"," 'explained_variance',\n"," 'f1',\n"," 'f1_macro',\n"," 'f1_micro',\n"," 'f1_samples',\n"," 'f1_weighted',\n"," 'fowlkes_mallows_score',\n"," 'homogeneity_score',\n"," 'jaccard',\n"," 'jaccard_macro',\n"," 'jaccard_micro',\n"," 'jaccard_samples',\n"," 'jaccard_weighted',\n"," 'max_error',\n"," 'mutual_info_score',\n"," 'neg_brier_score',\n"," 'neg_log_loss',\n"," 'neg_mean_absolute_error',\n"," 'neg_mean_gamma_deviance',\n"," 'neg_mean_poisson_deviance',\n"," 'neg_mean_squared_error',\n"," 'neg_mean_squared_log_error',\n"," 'neg_median_absolute_error',\n"," 'neg_root_mean_squared_error',\n"," 'normalized_mutual_info_score',\n"," 'precision',\n"," 'precision_macro',\n"," 'precision_micro',\n"," 'precision_samples',\n"," 'precision_weighted',\n"," 'r2',\n"," 'recall',\n"," 'recall_macro',\n"," 'recall_micro',\n"," 'recall_samples',\n"," 'recall_weighted',\n"," 'roc_auc',\n"," 'roc_auc_ovo',\n"," 'roc_auc_ovo_weighted',\n"," 'roc_auc_ovr',\n"," 'roc_auc_ovr_weighted',\n"," 'v_measure_score']"]},"metadata":{"tags":[]},"execution_count":69}]},{"cell_type":"code","metadata":{"id":"J4rQ8ouyvWkU","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":109},"executionInfo":{"status":"ok","timestamp":1597136276131,"user_tz":-480,"elapsed":783,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"129635b3-8b92-44a5-deca-a78cca87cabf"},"source":["vars.columns"],"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['total_cases', 'total_cases_per_million', 'new_cases_per_million',\n","       'population', 'population_density', 'median_age', 'aged_65_older',\n","       'aged_70_older', 'gdp_per_capita', 'cardiovasc_death_rate',\n","       'life_expectancy'],\n","      dtype='object')"]},"metadata":{"tags":[]},"execution_count":35}]},{"cell_type":"code","metadata":{"id":"wuuf-03MjEsu","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":220},"executionInfo":{"status":"ok","timestamp":1597136329324,"user_tz":-480,"elapsed":836,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"029c0984-107c-4097-b321-e79e183221b3"},"source":["# Feature Importance\n","features_list = vars.columns\n","importances = list(rf.feature_importances_)\n","feature_importances = [(feature, round(importance, 2)) for feature, importance in zip(features_list, importances)]\n","feature_importances = sorted(feature_importances, key = lambda x: x[1], reverse = True)\n","[print('Variable RF: {:20} Importance: {}'.format(*pair)) for pair in feature_importances];"],"execution_count":37,"outputs":[{"output_type":"stream","text":["Variable RF: total_cases_per_million Importance: 0.42\n","Variable RF: total_cases          Importance: 0.16\n","Variable RF: aged_65_older        Importance: 0.13\n","Variable RF: aged_70_older        Importance: 0.13\n","Variable RF: cardiovasc_death_rate Importance: 0.06\n","Variable RF: life_expectancy      Importance: 0.04\n","Variable RF: new_cases_per_million Importance: 0.03\n","Variable RF: population           Importance: 0.02\n","Variable RF: median_age           Importance: 0.01\n","Variable RF: gdp_per_capita       Importance: 0.01\n","Variable RF: population_density   Importance: 0.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"KmgoZ_eVjEqf","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":473},"executionInfo":{"status":"ok","timestamp":1597136340769,"user_tz":-480,"elapsed":1338,"user":{"displayName":"Yeow Ling Yun","photoUrl":"","userId":"11787059419671054520"}},"outputId":"b393c4fe-3400-41c1-c812-9ead08f61192"},"source":["plt.style.use('fivethirtyeight')\n","x_values = list(range(len(importances)))\n","plt.bar(x_values, importances, orientation = 'vertical')\n","plt.xticks(x_values, features_list, rotation='vertical')\n","plt.ylabel('Importance'); plt.xlabel('Feature'); plt.title('Feature Importances_RF');"],"execution_count":38,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"KgL_HRQVjEll","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}